# Import necessary libraries
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.pipeline import make_pipeline

# Generate example data with a quadratic relationship
np.random.seed(seed=3)
X = 2 * np.random.rand(100, 1)  # Independent variable
y = 2 + 3 * X + 1.5 * X**2 + np.random.randn(100, 1)  # Quadratic relationship with noise

# Visualize the data
plt.scatter(X, y, alpha=0.7, label='Data Points')
plt.xlabel('Independent Variable (X)')
plt.ylabel('Dependent Variable (y)')
plt.title('Quadratic Regression Example Data')
plt.legend()
plt.show()

# Create a quadratic regression model using Polynomial Regression
degree = 2
model = make_pipeline(PolynomialFeatures(degree), LinearRegression())

# Fit the model to the data
model.fit(X, y)

# Make predictions using the model
X_new = np.linspace(0, 2, 100).reshape(-1, 1)
y_pred = model.predict(X_new)

# Visualize the quadratic regression curve
plt.scatter(X, y, alpha=0.7, label='Data Points')
plt.plot(X_new, y_pred, 'r-', label=f'Quadratic Regression (Degree={degree})')
plt.xlabel('Independent Variable (X)')
plt.ylabel('Dependent Variable (y)')
plt.title('Quadratic Regression Example')
plt.legend()
plt.show()
